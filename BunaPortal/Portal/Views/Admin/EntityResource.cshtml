@using BunaPortal;
@{
    ViewBag.Title = Localizer.Current.GetString("EntityResource");
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">

            @*<div id="table" class="box-header with-border">
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>*@
            <div class="box-body table-responsive">
                <div class="row">
                    <div class="col-md-12">
                        <div id="responseMessage"></div>
                    </div>
                </div>
                @*<div id="table" class="table-responsive">*@
                <table id="tblGrid" class="table no-margin">
                    <thead>
                        <tr>
                            <th>ResourceID</th>
                            <th>@Localizer.Current.GetString("ResourceKey")</th>
                            <th>@Localizer.Current.GetString("ResourceCulture")</th>
                            <th>@Localizer.Current.GetString("ResourceValue")</th>
                            <th>@Localizer.Current.GetString("IsActive")</th>
                            <th>@Localizer.Current.GetString("CreateDateTime")</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="viewModal"></div>
@section Header{
    <h1>
        @Localizer.Current.GetString("EntityResource")
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-home"></i>@Localizer.Current.GetString("Home")</a></li>
        <li><a href="#" class="active">@Localizer.Current.GetString("EntityResource")</a></li>
    </ol>
}
@section scripts
{
    <script type="text/javascript">
		$(document).ready(function() {
			$('#responseMessage').html("");
			var datatable = $('#tblGrid').dataTable({
			"bServerSide": true,
			"bAutoWidth": true,
			"sAjaxSource": '@Url.Action("GetEntityResourceList", "Admin")',
			"fnServerData": function(sSource, aoData, fnCallback) {
			$('#responseMessage').html("");
			$.ajax({
				"dataType": 'json',
				"contentType": "application/json; charset = utf-8",
				"type": "GET",
				"url": sSource,
				"data": aoData,
				"success": fnCallback,
				"error": function(xhr, textStatus, error){
					$('#responseMessage').html(xhr.responseText);
				}
			});
			},
			"bProcessing": true,
			"dom": 'T<"clear"><Blp>rtip',
			"lengthMenu": [[10, 100, 500, 1000, -1], [10, 100, 500, 1000, "All"]],
		"aoColumns": [
			 { "mDataProp": "ResourceID" },
			 { "mDataProp": "ResourceKey" },
			 { "mDataProp": "ResourceCulture" },
			 { "mDataProp": "ResourceValue" },
			 { "mDataProp": "IsActiveCheckBox" },
			 { "mDataProp": "CreateDateTime" },
			 { "mDataProp": "EditButton" },
			 { "mDataProp": "DeleteButton" },
		],
		"columnDefs": [{ visible: false, targets: [0] }, { orderable: false, targets: [6, 7] }, { "render": function (data, type, row) { if (data != null && data.length > 0) { var date = new Date(parseInt(data.substr(6))); return date.toISOString().substring(0, 10); } else { return ""; } }, "targets": [5] }],
		"buttons": [
			{
			    text: '<i class="fa fa-plus" aria-hidden="true"></i>',
			   	action: function(e, dt, node, config) {

				    $.ajax({
					type: 'POST',
					url: '@Url.Action("GetEntityResource", "Admin")',
					data: { id: '' },
					dataType: "text",
					success: function(result) {
					if (result)
					{
						$('#viewModal').html(result);
					}
					else {
						SaveError(data.errorMessage);
					}
					}
				});
				},
					titleAttr: '@Localizer.Current.GetString("Add")'
				},
				{
				    text: '<i class="fa fa-file-excel-o"></i>',
				    action: function(e, dt, node, config)
				{
				$.ajax({
					type: 'POST',
					url: '@Url.Action("ExportForm", "Admin")',
					data: { dataList: JSON.stringify(dt.ajax.params()) },
					success: function(result) {
					if (result)
					{
						$('#viewModal').html(result);
					}
					else {
						SaveError(data.errorMessage);
					}
					}
				});
				},
					titleAttr: '@Localizer.Current.GetString("Export")'
				},
				{
					extend: 'copyHtml5',
					text: '<i class="fa fa-files-o"></i>',
					titleAttr: 'Copy'
				},
				{
					extend: 'print',
					text: '<i class="fa fa-print" aria-hidden="true"></i>',
					titleAttr: '@Localizer.Current.GetString("Print")',
					customize: function(win)
					{
						$(win.document.body)
						.css('font-size', '10pt')
						.prepend(
						 '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
						);
						$(win.document.body).find('table')
						.addClass('compact')
						.css('font-size', 'inherit');
					}
				}
		],
		"language": {
			"lengthMenu":"  " + display.value + " _MENU_ " + records.value,
			"zeroRecords": zeroRecords.value,
            "info": showing.value + " _PAGE_ of _PAGES_ from _TOTAL_ entries",
			"infoEmpty": infoEmpty.value,
			"infoFiltered":  "(" + filtered.value + " _MAX_ " + totalrecords.value + ")",
			"loadingRecords": loadingRecords.value,
            "processing": '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>',
			"paginate": {
				"first": first.value,
				"last": last.value,
				"next": next.vaue,
				"previous": previous.value
			},
		}
		}).yadcf([
			{
				column_number: 1,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 2,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 3,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 4,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 5,
				filter_type: "range_date",
				date_format: "yyyy-mm-dd",
				filter_delay: 500
			},
		], { cumulative_filtering: true });
		$('#tblGrid').on('click', '.btnEdit', function(e)
		{
		   	e.preventDefault();
			var value = $(this).attr("data-id");
			$.ajax({
				type: 'POST',
				url: '@Url.Action("GetEntityResource", "Admin")',
				data: { id: value },
				dataType: "text",
				success: function(result)
				{
				if (result)
				{
				$('#viewModal').html(result);
				}
				else
				{
					SaveError(data.errorMessage);
				}
			}
			});
		});
		$('#tblGrid').on('click', '.btnDelete', function(e)
		{
			if (confirm('Are you sure you want to delete'))
			{
			e.preventDefault();
			var value = $(this).attr("data-id");
			$.ajax({
				type: 'POST',
				url: '@Url.Action("DeleteEntityResource", "Admin")',
				data: { id: value },
				dataType: "text",
				success: function(result) {
				$('#viewModal').html(result);
				$('#tblGrid').DataTable().ajax.reload();
				},
			 });
			 }
		 });
		 });
    </script>
}
