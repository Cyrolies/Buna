@using BunaPortal;
@{
    ViewBag.Title = Localizer.Current.GetString("EntityField");
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div>
                Toggle column: <a class="toggle-vis" data-column="1">IsInGridDisplay</a> - <a class="toggle-vis" data-column="2">TabName</a> - <a class="toggle-vis" data-column="3">EntityID</a> - <a class="toggle-vis" data-column="4">IsActive</a>
			</div>
            @*<div id="table" class="box-header with-border">
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
        </div>*@
            <div id="viewModal"></div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div id="responseMessage"></div>
                    </div>
                </div>
                <div id="table" class="table-responsive">
                    <table id="tblGrid" class="table no-margin">
                        <thead>
                            <tr>
                                <th>@Localizer.Current.GetString("EntityFieldID")</th>
                                <th>@Localizer.Current.GetString("IsInGridDisplay")</th>
                                <th>@Localizer.Current.GetString("TabName")</th>
                                <th>@Localizer.Current.GetString("Entity")</th>
                                <th>@Localizer.Current.GetString("IsActive")</th>
                                <th>@Localizer.Current.GetString("IsPrimaryKey")</th>
                                <th>@Localizer.Current.GetString("EntityFieldName")</th>
                                <th>@Localizer.Current.GetString("IsHidden")</th>
                                <th>@Localizer.Current.GetString("DisplayName")</th>
                                <th>@Localizer.Current.GetString("IsMandatory")</th>
                                <th>@Localizer.Current.GetString("EntityFieldDataType")</th>
                                <th>@Localizer.Current.GetString("IsForeignKey")</th>
                                <th>@Localizer.Current.GetString("ControlOrderNo")</th>
                                <th>@Localizer.Current.GetString("StcControlType")</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @section Header{
        <h1>
            @Localizer.Current.GetString("EntityField")
        </h1>
        <ol class="breadcrumb">
            <li><a href="/"><i class="fa fa-home"></i>@Localizer.Current.GetString("Home")</a></li>
            <li><a href="#" class="active">@Localizer.Current.GetString("EntityField")</a></li>
        </ol>
    }
    @section scripts
{
        <script type="text/javascript">
		$(document).ready(function() {
			$('#responseMessage').html("");
			var datatable = $('#tblGrid').dataTable({
			"bServerSide": true,
			"bAutoWidth": true,
            "sAjaxSource": '@Url.Action("GetEntityFieldList", "Admin")',
			"fnServerData": function(sSource, aoData, fnCallback) {
			$('#responseMessage').html("");
			$.ajax({
				"dataType": 'json',
				"contentType": "application/json; charset = utf-8",
				"type": "GET",
				"url": sSource,
				"data": aoData,
				"success": fnCallback,
				"error": function(xhr, textStatus, error){
					$('#responseMessage').html(xhr.responseText);
				}
			});
			},
			"bProcessing": true,
			"dom": 'T<"clear"><Blp>rtip',
			"lengthMenu": [[10, 100, 500, 1000, -1], [10, 100, 500, 1000, "All"]],
		"aoColumns": [
			 { "mDataProp": "EntityFieldID" },
			 { "mDataProp": "IsInGridDisplay" },
			 { "mDataProp": "TabName" },
			 { "mDataProp": "EntityID" },
			 {"mDataProp": "IsActiveCheckBox" },
			 { "mDataProp": "IsPrimaryKey" },
			 { "mDataProp": "EntityFieldName" },
			 { "mDataProp": "IsHidden" },
			 { "mDataProp": "DisplayName" },
			 { "mDataProp": "IsMandatory" },
			 { "mDataProp": "EntityFieldDataTypeID" },
			 { "mDataProp": "IsForeignKey" },
			 { "mDataProp": "ControlOrderNo" },
			 { "mDataProp": "StcControlTypeID" },
			 {"mDataProp": "EditButton" },
			 {"mDataProp": "DeleteButton" },
			 { "mDataProp": "EntityDesc" },
			 { "mDataProp": "EntityFieldDataTypeDesc" },
			 { "mDataProp": "StcControlTypeDesc" },
		],
		"columnDefs": [{ visible: false, targets: [0,16,17,18] },{ orderable: false, targets: [14,15] },{"render": function(data, type, row) {  return row.EntityDesc;},"targets": [3]},{"render": function(data, type, row) {  return row.EntityFieldDataTypeDesc;},"targets": [10]},{"render": function(data, type, row) {  return row.StcControlTypeDesc;},"targets": [13]} ],


		"buttons": [
			{
				text: '<i class="fa fa-plus" aria-hidden="true"></i>',
				action: function(e, dt, node, config) {
				$.ajax({
					type: 'POST',
					url: '@Url.Action("GetEntityField", "Admin")',
					data: { id: '' },
					dataType: "text",
					success: function(result) {
					if (result)
					{
						$('#viewModal').html(result);
					}
					else {
						SaveError(data.errorMessage);
					}
					}
				});
				},
					titleAttr: '@Localizer.Current.GetString("Add")'
				},
				{
					text: '<i class="fa fa-file-excel-o"></i>',
					action: function(e, dt, node, config)
				{
				$.ajax({
					type: 'POST',
					url: '@Url.Action("ExportForm", "Admin")',
					data: { dataList: JSON.stringify(dt.ajax.params()) },
					success: function(result) {
					if (result)
					{
						$('#viewModal').html(result);
					}
					else {
						SaveError(data.errorMessage);
					}
					}
				});
				},
					titleAttr: '@Localizer.Current.GetString("Export")'
				},
				{
					extend: 'copyHtml5',
					text: '<i class="fa fa-files-o"></i>',
					titleAttr: 'Copy'
				},
				{
					extend: 'print',
					text: '<i class="fa fa-print" aria-hidden="true"></i>',
					titleAttr: '@Localizer.Current.GetString("Print")',
					customize: function(win)
					{
						$(win.document.body)
						.css('font-size', '10pt')
						.prepend(
						 '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
						);
						$(win.document.body).find('table')
						.addClass('compact')
						.css('font-size', 'inherit');
					}
				}
		],
		"language": {
			"lengthMenu":"  " + display.value + " _MENU_ " + records.value,
			"zeroRecords": zeroRecords.value,
			"info":  showing.value + " _PAGE_ " + " - _PAGES_",
			"infoEmpty": infoEmpty.value,
			"infoFiltered":  "(" + filtered.value + " _MAX_ " + totalrecords.value + ")",
			"loadingRecords": loadingRecords.value,
            "processing": '<div class="loader"> <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i></div> ',
			"paginate": {
				"first": first.value,
				"last": last.value,
				"next": next.vaue,
				"previous": previous.value
			},
		}
		}).yadcf([
			{
				column_number: 1,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 2,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 3,
                select_type: 'select2'
				//filter_delay: 500
			},
			{
				column_number: 4,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 5,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 6,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 7,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 8,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 9,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 10,
                select_type: 'select2'
				//filter_delay: 500
			},
			{
				column_number: 11,
                select_type: 'select2',
				data: ["True", "False"]
			},
			{
				column_number: 12,
				filter_type: "text",
				filter_delay: 500
			},
			{
				column_number: 13,
                select_type: 'select2',
				//filter_delay: 500
			},
		], { cumulative_filtering: true });
		$('#tblGrid').on('click', '.btnEdit', function(e)
		{
			e.preventDefault();
			var value = $(this).attr("data-id");
			$.ajax({
				type: 'POST',
				url: '@Url.Action("GetEntityField", "Admin")',
				data: { id: value },
				dataType: "text",
				success: function(result)
				{
				if (result)
				{
				$('#viewModal').html(result);
				}
				else
				{
					SaveError(data.errorMessage);
				}
			}
			});
		});
		$('#tblGrid').on('click', '.btnDelete', function(e)
		{
			if (confirm('Are you sure you want to delete'))
			{
			e.preventDefault();
			var value = $(this).attr("data-id");
			$.ajax({
				type: 'POST',
				url: '@Url.Action("DeleteEntityField", "Admin")',
				data: { id: value },
				dataType: "text",
				success: function(result) {
				$('#viewModal').html(result);
				$('#tblGrid').DataTable().ajax.reload();
				},
			 });
			 }
		});


        $('#tblGrid').on('dblclick', 'tr', function (e) {
			e.preventDefault();
            var value = $('#tblGrid').DataTable().row(this).data()["EntityFieldID"];
			$.ajax({
				type: 'POST',
				url: '@Url.Action("GetEntityField", "Admin")',
				data: { id: value },
				dataType: "text",
				success: function(result)
				{
				if (result)
				{
				$('#viewModal').html(result);
				}
				else
				{
					SaveError(data.errorMessage);
				}
			}
			});
            });

            //hide/show columns
            $('a.toggle-vis').on('click', function (e) {
                e.preventDefault();

                // Get the column API object
                var column = $('#tblGrid').DataTable().column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });
		 });
        </script>
    }
