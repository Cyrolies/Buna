@using CyroTechPortal; 
@{
    ViewBag.Title = Localizer.Current.GetString("Activity Maintenance");
 
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header no-border">
                <div id="table">
                    @* <h3 class="box-title">Activities</h3>*@
                    @*<a href="#" id="btnAdd" ><i class="fa fa-plus" aria-hidden="true"></i></a>*@
                    @*<a href="#" id="btnExport" ><i class="fa fa-file-archive-o" aria-hidden="true"></i></a>*@

                </div>
                <div id="viewModal"></div>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-close"></i></button>
                </div>
                </div>
               
                <!-- /.box-header -->
                <div class="box-body table-responsive">
                    <div class="row">
                        <div class="col-md-12">
                            <div id="responseMessage"></div>
                        </div>
                    </div>
                    <!--<div id="table" class="table-responsive">-->
                    <table id="tblGrid" class="table" style="width:100%">
                        <thead>
                            <tr>
                                <th>ActivityID</th>
                                <th>@Localizer.Current.GetString("ActivityName")</th>
                                <th>@Localizer.Current.GetString("ActivityGroup")</th>
                                <th>@Localizer.Current.GetString("CreateDateTime")</th>
                                <th>@Localizer.Current.GetString("ChangeDateTime")</th>
                                <th>@Localizer.Current.GetString("IsActive")</th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>

                    </table>
                    <!-- </div>
              /.table-responsive -->
                </div>
                <!-- /.box-footer -->
            </div>
    </div>
</div>



@section Header{
    <h1>
        @Localizer.Current.GetString("Activity Maintenance")
        <small>@Localizer.Current.GetString("Maintain activity descriptions")</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-home"></i>@Localizer.Current.GetString("Home")</a></li>
        <li><a href="#" class="active">@Localizer.Current.GetString("Activity")</a></li>
    </ol>
}

@section scripts{
   

    <script type="text/javascript">
        $(document).ready(function () {



            $('#responseMessage').html("");
                    
            var datatable = $('#tblGrid').dataTable({
                "bServerSide": true,
                "bAutoWidth": true,
                //"sScrollY": "400px",
                //"sScrollX": "200px",
                "sAjaxSource": '@Url.Action("GetActivityList", "Account")',
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $('#responseMessage').html("");
                    $.ajax({
                        "dataType": 'json',
                        "contentType": "application/json; charset=utf-8",
                        "type": "GET",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback,
                        "error": function (xhr, textStatus, error) {
                            $('#responseMessage').html(xhr.responseText);
                        }
                    });
                },
                "language": {
                    "processing": "testing change"
                },
                "bProcessing": true,
                "dom": 'T<"clear"><Blp>rtip',
                "lengthMenu": [[10, 100, 500, 1000, -1], [10, 100, 500, 1000, "All"]],
                "aoColumns": [
                           { "mDataProp": "ActivityID" },
                           { "mDataProp": "ActivityName" },
                           { "mDataProp": "StpActivityGroupID" },
                           { "mDataProp": "CreateDateTime" },
                           { "mDataProp": "ChangeDateTime" },
                           { "mDataProp": "IsActiveCheckBox" },
                           { "mDataProp": "EditButton" },
                           { "mDataProp": "DeleteButton" },
                           { "mDataProp": "StpActivityGroup" },
                ],
                "columnDefs": [
                    {
                        "render": function (data, type, row) {if (data != null && data.length > 0){var date = new Date(parseInt(data.substr(6)));return date.toISOString().substring(0, 10);}else { return "";}}, "targets": [3,4]},
                    {
                        "render": function (data, type, row) {
                            //Display Foregin key field and not id
                            return row.StpActivityGroup;
                        },
                        "targets": [2]
                    },

                    { orderable: false, targets: [5, 6, 7] }, //disable ordering
                    { visible: false, targets: [0, 8] } //hide id field
                ],
                "buttons": [
                     {
                         text: '<i class="fa fa-plus" aria-hidden="true"></i>',
                         titleAttr: '@Localizer.Current.GetString("Add")',
                         className: 'btn btn-primary',

                         action: function (e, dt, node, config) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetActivity", "Account")',
                            data: { id: '' },
                            dataType: "text",
                            success: function (result) {
                                if (result) {
                                    $('#viewModal').html(result);
                                }
                                else {
                                    SaveError(data.errorMessage);
                                }

                            },
                        });
                    },
                     },
                    {
                        text: '<i class="fa fa-file-excel-o"></i>',
                        titleAttr: '@Localizer.Current.GetString("Export")',
                        className: 'btn btn-primary',
                        action: function (e, dt, node, config) {

                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("ExportForm", "Account")',
                                data: { dataList: JSON.stringify(dt.ajax.params()) },
                                success: function (result) {
                                    if (result) {
                                        $('#viewModal').html(result);
                                    }
                                    else {
                                        SaveError(data.errorMessage);
                                    }

                                },
                            });
                        },
                    },
                    {
                        extend: 'copyHtml5',
                        text: '<i class="fa fa-files-o"></i>',
                        className: 'btn btn-primary',
                        titleAttr: 'Copy'
                    }
                    ,
                    {
                        extend: 'print',
                        text: '<i class="fa fa-print" aria-hidden="true"></i>',
                        className: 'btn btn-primary',
                        titleAttr: '@Localizer.Current.GetString("Print")',
                        customize: function (win) {
                            $(win.document.body)
                            .css('font-size', '10pt')
                            .prepend(
                                '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
                                );
                            $(win.document.body).find('table')
                                 .addClass('compact')
                             .css('font-size', 'inherit');

                        },
                    }
                ],
                "language": {
                    "lengthMenu": "  " + display.value + " _MENU_ " + records.value,//"Display _MENU_ records per page"
                    "zeroRecords": zeroRecords.value,
                    "info": showing.value + " _PAGE_ " + "- _PAGES_",//"Showing page _PAGE_ of _PAGES_"
                    "infoEmpty": infoEmpty.value,
                    "infoFiltered": "(" + filtered.value + " _MAX_ " + totalrecords.value + ")",//"(filtered from _MAX_ total records)"
                    "loadingRecords": loadingRecords.value,
                    "processing": processing.value,
                    "paginate": {
                        "first": first.value,
                        "last": last.value,
                        "next": next.vaue,
                        "previous": previous.value
                    },
                }
            }).yadcf([
                        {
                            column_number: 1,
                            filter_type: "text",
                            html_data_type: "html",
                            filter_delay: 500
                        },

                        {
                            "column_number": 2,
                            "filter_type": "select",
                            "data": [],

                            "select_type": "select2",
                            "select_type_options": {
                                "minimumResultsForSearch": 2,
                                "filter_delay": 500,
                                "width": "100",
                                @*initSelection: function (element, callback) {
                                    //alert(JSON.stringify(element));
                                    // sets selection according to input's value attribute
                                    $.ajax({
                                       // "dataType": 'json',
                                       url: '@Url.Action("PopulateSelect2Filter", "Base")',
                                        "contentType": "application/json; charset=utf-8",
                                        "type": "GET",
                                        "data": {
                                               entityfield: 'StpActivityGroupID',
                                               entityname: 'Activity',
                                               },
                                        "success": function (data) {
                                            var res = [];
                                            $.each(JSON.parse(data), function (index, account) {
                                                res.push({
                                                    id: account.Value,
                                                    text: account.Text
                                                });
                                            });
                                            callback(res);
                                        },
                                        "error": function (xhr, textStatus, error) {
                                            $('#responseMessage').html(xhr.responseText);
                                        }
                                    });

                                },*@
                                ajax: {
                                    //How long the user has to pause their typing before sending the next request
                                    quietMillis: 500,
                                    //The url of the json service
                                    url: '@Url.Action("PopulateSelect2Filter", "Base")',
                                    data: function (params) {
                                        return {
                                            searchTerm: params.term,
                                            entityfield: 'StpActivityGroupID',
                                            entityname: 'Activity',

                                        };
                                    },
                                    processResults: function (data, page) {
                                        var str = JSON.stringify(data);
                                        if (str.indexOf("Error") >= 0) {
                                            $('#responseMessage').html(data);
                                        }
                                        var res = [];
                                        $.each(JSON.parse(data), function (index, account) {

                                            res.push({
                                                id: account.Value,
                                                text: account.Text
                                            });
                                        });

                                        return { results: res };//, more: more };

                                    }
                                 },

                                minimumInputLength: 3,
                                closeOnSelect: false,

                            },


                        },
                        {
                            column_number: 3,
                            filter_type: "range_date",
                            date_format: "yyyy/mm/dd",
                            filter_delay: 500,
                        },
                        {
                            column_number: 4,
                            filter_type: "range_date",
                            date_format: "yyyy/mm/dd",
                            filter_delay: 500
                        },
                        {
                            column_number: 5,
                            filter_type: "select",
                            data: ["True", "False"],
                            "select_type": "select2",

                        },

                        //{
                        //    column_number: 4,
                        //    filter_type: "range_number_slider",
                        //    filter_delay: 500
                        //},
            ], { cumulative_filtering: true });

            //customize: function (win) {
            //    $(win.document.body)
            //        .css('font-size', '10pt')
            //        .prepend(
            //            '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
            //            );
            //    $(win.document.body).find('table')
            //         .addClass('compact')
            //         .css('font-size', 'inherit');
            //}

            datatable.on('xhr.dt', function () {
                //var onlyPagedata = datatable.aaData;
                //alert(JSON.stringify($('#tblGrid').DataTable().ajax.params()));
                //tableParams = JSON.stringify($('#tblGrid').DataTable().ajax.params());
                //$('#tblGrid').DataTable();

                //var versionNo = $.fn.dataTable.version;
                //alert(versionNo);
                //alert($('#tblGrid').DataTable().rows({ page: 'current' }));
                //dataFilter: function(data){
                //    var json = jQuery.parseJSON( data );
                //    json.recordsTotal = json.total;
                //    json.recordsFiltered = json.total;
                //    json.data = json.list;

                //    return JSON.stringify( json ); // return JSON string
                // datatable.rows({ search: 'applied' }).nodes();
                // datatable.rows({ search: 'removed' }).nodes();
                // $('#responseMessage').html(JSON.stringify(datatable.rows({ search: 'applied' }).nodes()));
                // alert(JSON.stringify(xhr));
                // var filteredrows = datatable._('tr', { "filter": "applied" });

                //for (var i = 0; i < settings.length; i++) {
                //    alert(JSON.stringify(settings[i]));
                //};
            });


            @*$.ajax({
                        "dataType": 'json',
                        "url": '@Url.Action("GetStpDataFilterList", "Account")',
                        "contentType": "application/json; charset=utf-8",
                        "type": "GET",
                        "data": stpdatatypeid = 4,
                        "success": function (response) {



                            return JSON.stringify(response);


                        },
                        "error": function (xhr, textStatus, error) {
                            $('#responseMessage').html(xhr.responseText);
                        }
                    });*@

            //$('#selectAllCheckBox').click(function() {
            //    if($(this).is(':checked')){
            //        var filteredRows  =   myDataTableHandle._('tr', {"filter":"applied"});
            //        alert( filteredRows.length +' nodes were returned' );
            //        $(myDataTableHandle.fnGetNodes()).find($('input[name=idCheckBox]')).each(function () {
            //            $(this).prop('checked', true);
            //        });
            //    else{
            //       $('input[name=idCheckBox]:checked').prop('checked', false);
            //    }
            //});



            $('#tblGrid').on('click', '.btnEdit', function (e) {
                e.preventDefault();
                var value = $(this).attr("data-id");

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetActivity", "Account")',
                    data: { id: value },
                    dataType: "text",
                    success: function (result) {
                        if (result) {
                            $('#viewModal').html(result);
                        }
                        else {
                            SaveError(data.errorMessage);
                        }

                    },

                });


            });

            $('#tblGrid').on('click', '.btnDelete', function (e) {
                if (confirm('Are you sure you want to delete')) {
                    e.preventDefault();

                    var value = $(this).attr("data-id");

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteActivity", "Account")',
                        data: { id: value },
                        dataType: "text",
                        success: function (result) {
                            $('#viewModal').html(result);
                            // document.getElementById('responseMessage').innerHTML = result;
                            $('#tblGrid').DataTable().ajax.reload();

                        },

                    });

                }
            });

            $('#tblGrid').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    datatable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });

        });

    </script>

}
